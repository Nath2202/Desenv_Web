// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tecweb2.webapi.Contexts;

namespace tecweb2.webapi.Migrations
{
    [DbContext(typeof(SqlContext))]
    partial class SqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.CareerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Careers");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.CareerSubjectiveEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("CareerId");

                    b.Property<Guid>("SubjectiveId");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.HasIndex("SubjectiveId");

                    b.ToTable("CareerSubjectives");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.ClassEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<int>("DayOfWeek");

                    b.Property<Guid>("SubjectiveId");

                    b.HasKey("Id");

                    b.HasIndex("SubjectiveId");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.ItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<Guid>("SubjectiveId");

                    b.Property<string>("Title");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("SubjectiveId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.SemesterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset>("End");

                    b.Property<DateTimeOffset>("Start");

                    b.Property<string>("Title");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Semesters");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.SubjectiveEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Subjectives");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.SubjectiveSemesterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("EndDateTeachingPlan");

                    b.Property<Guid>("SemesterId");

                    b.Property<Guid>("SubjectiveId");

                    b.HasKey("Id");

                    b.HasIndex("SemesterId");

                    b.HasIndex("SubjectiveId");

                    b.ToTable("SubjectiveSemesters");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("MasterId");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.ToTable("TeachingPlans");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanItemEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("ItemId");

                    b.Property<Guid>("TeachingPlanId");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("TeachingPlanId");

                    b.ToTable("TeachingPlanItens");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanLogEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<int>("Status");

                    b.Property<Guid>("TeachingPlanId");

                    b.Property<Guid>("TeacingPlanId");

                    b.HasKey("Id");

                    b.HasIndex("TeacingPlanId");

                    b.ToTable("TeachingPlanLogs");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.UserCareerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<Guid>("CareerId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CareerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCareers");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Roles");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.UserSubjectiveEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<bool>("Master");

                    b.Property<Guid>("SubjectiveId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("SubjectiveId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSubjectives");
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.CareerSubjectiveEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.CareerEntity", "Career")
                        .WithMany()
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tecweb2.webapi.Models.Entities.SubjectiveEntity", "Subjective")
                        .WithMany()
                        .HasForeignKey("SubjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.ClassEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.SubjectiveEntity", "Subjective")
                        .WithMany()
                        .HasForeignKey("SubjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.ItemEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.SubjectiveEntity", "Subjective")
                        .WithMany()
                        .HasForeignKey("SubjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.SubjectiveSemesterEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.SemesterEntity", "Semester")
                        .WithMany()
                        .HasForeignKey("SemesterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tecweb2.webapi.Models.Entities.SubjectiveEntity", "Subjective")
                        .WithMany()
                        .HasForeignKey("SubjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.UserEntity", "Master")
                        .WithMany()
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanItemEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.ItemEntity", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tecweb2.webapi.Models.Entities.TeachingPlanEntity", "TeachingPlan")
                        .WithMany()
                        .HasForeignKey("TeachingPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.TeachingPlanLogEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.TeachingPlanEntity", "TeachingPlan")
                        .WithMany()
                        .HasForeignKey("TeacingPlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.UserCareerEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.CareerEntity", "Career")
                        .WithMany()
                        .HasForeignKey("CareerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tecweb2.webapi.Models.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("tecweb2.webapi.Models.Entities.UserSubjectiveEntity", b =>
                {
                    b.HasOne("tecweb2.webapi.Models.Entities.SubjectiveEntity", "Subjective")
                        .WithMany()
                        .HasForeignKey("SubjectiveId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("tecweb2.webapi.Models.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
