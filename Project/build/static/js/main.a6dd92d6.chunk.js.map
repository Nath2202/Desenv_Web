{"version":3,"sources":["components/pages/sections/BreadcrumSection.js","components/pages/DashboardPage.js","components/pages/ProfilePage.js","components/pages/TablesPage.js","components/pages/MapsPage.js","components/pages/NotFoundPage.js","components/Routes.js","components/topNavigation.js","components/sideNavigation.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["BreadcrumSection","react_default","a","createElement","mdbreact_esm","className","id","active","type","placeholder","aria-label","size","color","icon","DashboardPage","Fragment","sections_BreadcrumSection","ProfilePage","TablesPage","MapsPage","NotFoundPage","Routes","Switch","Route","path","exact","component","React","Component","TopNavigation","state","collapse","onClick","_this","setState","toggle","dropdownOpen","light","expand","scrolling","this","isOpen","navbar","left","to","rel","href","target","right","fab","NavLink","activeClassName","Footer","App","topNavigation","sideNavigation","components_Routes","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"+NAoBeA,EAjBU,WACvB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,UAAU,QACfJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaE,GAAG,aAAaD,UAAU,qDACnCJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAmBG,QAAM,GAAzB,cAEJN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeC,UAAU,eACrBJ,EAAAC,EAAAC,cAAA,SAAOE,UAAU,+BAA+BG,KAAK,SAASC,YAAY,kBAAkBC,aAAW,WACvGT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQO,KAAK,KAAKC,MAAM,UAAUP,UAAU,OAAOG,KAAK,UAASP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASS,KAAK,gBCShFC,EAbO,WACpB,OACEb,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,KACEd,EAAAC,EAAAC,cAACa,EAAD,QCiHSC,EAzHM,WACnB,OACEhB,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,OC6IWG,EAhJK,WAClB,OACEjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACEd,EAAAC,EAAAC,cAACC,EAAA,EAAD,QC8ESe,UAhFG,WAChB,OACElB,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,QCiBWK,EAnBO,WACpB,OACEnB,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,KACEd,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WCgBNgB,mLAbX,OACEpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACErB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWZ,IACjCb,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,aAAaE,UAAWZ,IACpCb,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,WAAWE,UAAWT,IAClChB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWR,IACjCjB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,QAAQE,UAAWP,IAC/BlB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,CAAOC,KAAK,OAAOE,UAAWN,YATjBO,IAAMC,WCmDZC,6MAvDXC,MAAQ,CACJC,UAAU,KAGdC,QAAU,WACNC,EAAKC,SAAS,CACVH,UAAWE,EAAKH,MAAMC,cAI9BI,OAAS,WACLF,EAAKC,SAAS,CACVE,cAAeH,EAAKH,MAAMM,wFAK9B,OACInC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,UAAU,kBAAkBgC,OAAK,EAACC,OAAO,KAAKC,WAAS,GAC9DtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkB4B,QAAYQ,KAAKR,UACnC/B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaqC,OAAWD,KAAKV,MAAMC,SAAWW,QAAM,GAChDzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcuC,MAAI,GACd1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYG,QAAM,GACdN,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYwC,GAAG,KAAf,SAEJ3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAG0C,IAAI,sBAAsBxC,UAAU,yBAAyByC,KAAK,sCAAsCC,OAAO,UAAlH,cAEJ9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAG0C,IAAI,sBAAsBxC,UAAU,yBAAyByC,KAAK,+DAA+DC,OAAO,UAA3I,kBAEJ9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAG0C,IAAI,sBAAuBxC,UAAU,yBAAyByC,KAAK,8CAA8CC,OAAO,UAA3H,oBAGR9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAc4C,OAAK,GACf/C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAuBwC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,2CAA0C7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS6C,KAAG,EAACpC,KAAK,eAEnJZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,uBAAuBwC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,mCAAkC7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS6C,KAAG,EAACpC,KAAK,cAE3IZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0DAA0DwC,IAAI,sBAAsBC,KAAK,sEAAsEC,OAAO,UAAS9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS6C,KAAG,EAACpC,KAAK,SAASR,UAAU,SAAjO,eAEJJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGE,UAAU,0DAA0DwC,IAAI,sBAAsBC,KAAK,iDAAiDC,OAAO,UAAS9C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS6C,KAAG,EAACpC,KAAK,SAASR,UAAU,SAA5M,qBA/CAuB,sBC2CbC,EA1CO,WAClB,OACI5B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gCACXJ,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,KAAKzC,UAAU,8BAGvBJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcC,UAAU,oBACpBJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAASzB,OAAO,EAAMmB,GAAG,IAAIO,gBAAgB,eACzClD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASS,KAAK,YAAYR,UAAU,SADxC,sBAWJJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAASN,GAAG,UAAUO,gBAAgB,eAClClD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASS,KAAK,QAAQR,UAAU,SADpC,oBAKJJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAASN,GAAG,QAAQO,gBAAgB,eAChClD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASS,KAAK,MAAMR,UAAU,SADlC,SAKJJ,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAASN,GAAG,OAAOO,gBAAgB,eAC/BlD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASS,KAAK,cAAcR,UAAU,SAD1C,WClBL+C,EAfA,WACX,OACInD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWQ,MAAM,OAAOP,UAAU,qCCkB3BgD,mLAbX,OACIpD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACbJ,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,MACAtD,EAAAC,EAAAC,cAAA,QAAMG,GAAG,UAAUD,UAAU,OAC3BJ,EAAAC,EAAAC,cAACqD,EAAD,OAEFvD,EAAAC,EAAAC,cAACsD,EAAD,cAVQ7B,aCGZ8B,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1C,QACfoC,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,kBCpEjEC,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,KAAQjF,EAAAC,EAAAC,cAACgF,EAAD,OAAkBC,SAASC,eAAe,SDSnD,WACb,GAA6C,kBAAmBnB,UAAW,CAGzE,GADkB,IAAIoB,IAAIC,GAAwB3B,OAAOC,UAC3C2B,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAAyB,OAAMH,GAAN,sBAEP7B,GAiDV,SAAiCO,GAE/B0B,MAAM1B,GACHI,KAAK,SAAAuB,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAM5B,KAAK,SAAAC,GACjCA,EAAa4B,aAAa7B,KAAK,WAC7BT,OAAOC,SAASsC,aAKpBnC,EAAgBC,KAGnBa,MAAM,WACLF,QAAQC,IACN,mEArEAuB,CAAwBnC,GAIxBC,UAAUC,cAAc8B,MAAM5B,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCpCxBoC","file":"static/js/main.a6dd92d6.chunk.js","sourcesContent":["import React from 'react';\nimport { MDBCard, MDBCardBody, MDBIcon, MDBBreadcrumb, MDBBreadcrumbItem, MDBFormInline, MDBBtn } from 'mdbreact';\n\nconst BreadcrumSection = () => {\n  return (\n    <MDBCard className=\"mb-5\">\n        <MDBCardBody id=\"breadcrumb\" className=\"d-flex align-items-center justify-content-between\">\n            <MDBBreadcrumb>\n                <MDBBreadcrumbItem>Home</MDBBreadcrumbItem>\n                <MDBBreadcrumbItem active>Dashboard</MDBBreadcrumbItem>\n            </MDBBreadcrumb>\n            <MDBFormInline className=\"md-form m-0\">\n                <input className=\"form-control form-control-sm\" type=\"search\" placeholder=\"Type your query\" aria-label=\"Search\"/>\n                <MDBBtn size=\"sm\" color=\"primary\" className=\"my-0\" type=\"submit\"><MDBIcon icon=\"search\" /></MDBBtn>\n            </MDBFormInline>\n        </MDBCardBody>\n    </MDBCard>\n  )\n}\n\nexport default BreadcrumSection;\n\n","import React from 'react';\nimport { MDBRow } from 'mdbreact';\n// import TableSection from './sections/TableSection';\nimport BreadcrumSection from './sections/BreadcrumSection';\n// import ChartSection1 from './sections/ChartSection1';\n// import ChartSection2 from './sections/ChartSection2';\n// import MapSection from './sections/MapSection';\n// import ModalSection from './sections/ModalSection';\n\nconst DashboardPage = () => {\n  return (\n    <React.Fragment>\n      <BreadcrumSection />\n      {/* <MDBRow className=\"mb-4\">\n          <MapSection />\n          <ModalSection />\n      </MDBRow> */}\n\n    </React.Fragment>\n  )\n}\n\nexport default DashboardPage;","import React from 'react'\nimport { MDBCard, MDBCol, MDBRow, MDBView, MDBMask, MDBCardImage, MDBCardBody, MDBCardTitle, MDBCardText, MDBCardFooter, MDBBtn, MDBIcon } from 'mdbreact';\n\n\nconst ProfilePage =  () => {\n  return (\n    <React.Fragment>\n        {/* <MDBRow className=\"justify-content-center\">\n        <MDBCol sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-5\">\n            <MDBCard>\n                <MDBCardImage className=\"img-fluid\" src={src1} />\n                <MDBCardBody>\n                    <MDBCardTitle className=\"text-center mb-2 font-bold\">Alice Mayer</MDBCardTitle>\n                    <MDBCardTitle sub className=\"text-center indigo-text mb-2 font-bold\">Photographer</MDBCardTitle>\n                    <MDBCardText>\n                        <strong className=\"mb-2\">About:</strong>\n                        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ratione perferendis quod animi dignissimos consectetur quibusdam numquam laboriosam, minus, provident...\n                    </MDBCardText>\n                    <div className=\"row justify-content-end pr-1\">\n                        <MDBBtn size=\"sm\" outline color=\"primary\">More...</MDBBtn>\n                    </div>\n                </MDBCardBody>\n            </MDBCard>\n        </MDBCol>\n        <MDBCol md=\"6\" lg=\"9\">\n        <section className=\"text-center pb-3\">\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-profile-page.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-signup.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n          <MDBRow className=\"d-flex justify-content-center\">\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <MDBView>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-profile-page.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </MDBView>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n            <MDBCol lg=\"6\" xl=\"5\" className=\"mb-3\">\n              <MDBCard className=\"d-flex mb-5\">\n                <view-wrapper>\n                  <img src=\"https://mdbootstrap.com/img/Mockups/Horizontal/6-col/pro-signup.jpg\" alt=\"Project\" className=\"img-fluid\"/>\n                  <MDBMask overlay=\"white-slight\"/>\n                </view-wrapper>\n                <MDBCardBody>\n                  <MDBCardTitle className=\"font-bold mb-3\">\n                    <strong>Project name</strong>\n                  </MDBCardTitle>\n                  <MDBCardText>Some quick example text to build on the card title and make up the bulk of the card's content.</MDBCardText>\n                </MDBCardBody>\n                <MDBCardFooter className=\"links-light profile-card-footer\">\n                  <span className=\"right\">\n                    <a className=\"p-2\" href=\"#profile\">\n                      Live Preview\n                      <MDBIcon icon=\"image\" className=\"ml-1\"/>\n                    </a>\n                  </span>\n                </MDBCardFooter>\n              </MDBCard>\n            </MDBCol>\n          </MDBRow>\n        </section>\n      </MDBCol>\n    </MDBRow> */}\n    </React.Fragment>\n  );\n}\n\nexport default ProfilePage;","import React from 'react'\nimport { MDBRow, MDBCol, MDBView, MDBCard, MDBCardBody, MDBTable, MDBTableHead, MDBTableBody } from 'mdbreact';\n\nconst TablesPage =  () => {\n  return (\n    <>\n      <MDBRow>\n      {/* <MDBCol md=\"12\">\n        <MDBCard className=\"mt-5\">\n          <MDBView className=\"gradient-card-header blue darken-2\">\n            <h4 className=\"h4-responsive text-white\">Basic tables</h4>\n          </MDBView>\n          <MDBCardBody>\n            <h3 className=\"mt-5 text-left\"><strong>Basic examples</strong></h3>\n            <p>Using the most basic table markup, here’s how .table-based tables look in Bootstrap. All table styles are inherited in Bootstrap 4, meaning any nested tables will be styled in the same manner as the parent.</p>\n            <MDBTable>\n              <MDBTableHead>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <h3 className=\"mt-5 text-left\"><strong>MDBTable head options</strong></h3>\n            <p>To change a background-color of thead (or any other element) use our color classes. If you are going to use a dark background you should also consider white text (to provide a proper contrast) by adding .text-white class.</p>\n            <MDBTable>\n              <MDBTableHead color=\"primary-color\" textWhite>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <MDBTable>\n              <MDBTableHead color=\"pink\">\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n            <h3 className=\"mt-5 text-left\"><strong>Striped rows.</strong></h3>\n            <p>Use prop striped to add zebra-striping to any table row within the table body</p>\n            <MDBTable striped>\n              <MDBTableHead>\n                <tr>\n                  <th>#</th>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Handle</th>\n                </tr>\n              </MDBTableHead>\n              <MDBTableBody>\n                <tr>\n                  <td>1</td>\n                  <td>Mark</td>\n                  <td>Otto</td>\n                  <td>@mdo</td>\n                </tr>\n                <tr>\n                  <td>2</td>\n                  <td>Jacob</td>\n                  <td>Thornton</td>\n                  <td>@fat</td>\n                </tr>\n                <tr>\n                  <td>3</td>\n                  <td>Larry</td>\n                  <td>the Bird</td>\n                  <td>@twitter</td>\n                </tr>\n              </MDBTableBody>\n            </MDBTable>\n          </MDBCardBody>\n        </MDBCard>\n      </MDBCol> */}\n    </MDBRow>\n    </>\n  )\n}\n\nexport default TablesPage;","import React from 'react'\nimport { MDBCol, MDBRow, MDBCard, MDBCardBody, MDBView } from 'mdbreact';\nimport GoogleMapReact from 'google-map-react';\n\nconst MapsPage =  () => {\n  return (\n    <React.Fragment>\n        {/* <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Regular map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                  defaultCenter={{lat: 10, lng: 10}}\n                  defaultZoom={7}\n                 />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Hybrid map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                    defaultCenter={{lat: 10, lng: 10}}\n                    defaultZoom={7}\n                    options = {{\n                      mapTypeId: 'hybrid'\n                    }}\n                  />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                Satellite map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                      defaultCenter={{lat: 10, lng: 10}}\n                      defaultZoom={7}\n                      options = {{\n                        mapTypeId: 'satellite'\n                      }}\n                    />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n          <MDBCol md=\"6\">\n            <MDBCard className=\"mt-5\">\n              <MDBView className=\"gradient-card-header blue darken-2\">\n                <h4 className=\"h4-responsive text-white\">\n                  Terrain map\n                </h4>\n              </MDBView>\n              <MDBCardBody style={{width: '100%', height: '300px'}} className=\"text-center\">\n                <GoogleMapReact\n                        defaultCenter={{lat: 10, lng: 10}}\n                        defaultZoom={7}\n                        options = {{\n                          mapTypeId: 'terrain'\n                        }}\n                      />\n              </MDBCardBody>\n            </MDBCard>\n          </MDBCol>\n        </MDBRow> */}\n    </React.Fragment>\n  )\n}\n\nexport default MapsPage;","import React from 'react'\nimport { MDBCol, MDBRow } from 'mdbreact';\n\n\nconst NotFoundPage =  () => {\n  return (\n    <React.Fragment>\n      <div className=\"full\">\n        {/* <MDBRow className=\"bad-gateway-row\">\n          <MDBCol md=\"8\">\n            <img alt=\"Error 404\" className=\"img-fluid\" hieght=\"20px\" src={logo}/>\n            <h2 className=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n            <h4>The requested URL was not found on this server.</h4>\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <img alt=\"Error 404\" className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\"/>\n          </MDBCol>\n        </MDBRow> */}\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DashboardPage from './pages/DashboardPage';\nimport ProfilePage from './pages/ProfilePage';\nimport TablesPage from './pages/TablesPage';\nimport MapsPage from './pages/MapsPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/' exact component={DashboardPage} />\n        <Route path='/dashboard' component={DashboardPage} />\n        <Route path='/profile' component={ProfilePage} />\n        <Route path='/tables' component={TablesPage} />\n        <Route path='/maps' component={MapsPage} />\n        <Route path='/404' component={NotFoundPage} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React, { Component } from 'react';\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\n\nclass TopNavigation extends Component {\n    state = {\n        collapse: false\n    }\n\n    onClick = () => {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    render() {\n        return (\n            <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n                <MDBNavbarToggler onClick = { this.onClick } />\n                <MDBCollapse isOpen = { this.state.collapse } navbar>\n                    <MDBNavbarNav left>\n                        <MDBNavItem active>\n                            <MDBNavLink to=\"#\">Home</MDBNavLink>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a rel=\"noopener noreferrer\" className=\"nav-link Ripple-parent\" href=\"https://mdbootstrap.com/docs/react/\" target=\"_blank\">About MDB</a>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a rel=\"noopener noreferrer\" className=\"nav-link Ripple-parent\" href=\"https://mdbootstrap.com/docs/react/getting-started/download/\" target=\"_blank\">Free download</a>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a rel=\"noopener noreferrer\"  className=\"nav-link Ripple-parent\" href=\"https://mdbootstrap.com/bootstrap-tutorial/\" target=\"_blank\">Free tutorials</a>\n                        </MDBNavItem>\n                    </MDBNavbarNav>\n                    <MDBNavbarNav right>\n                        <MDBNavItem>\n                            <a className=\"nav-link navbar-link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://pl-pl.facebook.com/mdbootstrap/\"><MDBIcon fab icon=\"facebook\" /></a>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a className=\"nav-link navbar-link\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://twitter.com/mdbootstrap\"><MDBIcon fab icon=\"twitter\" /></a>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a className=\"border border-light rounded mr-1 nav-link Ripple-parent\" rel=\"noopener noreferrer\" href=\"https://github.com/mdbootstrap/React-Bootstrap-with-Material-Design\" target=\"_blank\"><MDBIcon fab icon=\"github\" className=\"mr-2\"/>MDB GitHub</a>\n                        </MDBNavItem>\n                        <MDBNavItem>\n                            <a className=\"border border-light rounded mr-1 nav-link Ripple-parent\" rel=\"noopener noreferrer\" href=\"https://mdbootstrap.com/products/react-ui-kit/\" target=\"_blank\"><MDBIcon fab icon=\"github\" className=\"mr-2\"/>Go Pro</a>\n                        </MDBNavItem>\n                    </MDBNavbarNav>\n                </MDBCollapse>\n            </MDBNavbar>\n        );\n    }\n}\n\nexport default TopNavigation;","import React from 'react';\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = () => {\n    return (\n        <div className=\"sidebar-fixed position-fixed\">\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\n            \n            </a>\n            <MDBListGroup className=\"list-group-flush\">\n                <NavLink exact={true} to=\"/\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\n                        Página Inicial\n                    </MDBListGroupItem>\n                </NavLink>\n                {/* <NavLink to=\"/profile\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"user\" className=\"mr-3\"/>\n                        Profile\n                    </MDBListGroupItem>\n                </NavLink> */}\n                <NavLink to=\"/tables\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"table\" className=\"mr-3\"/>\n                        Plano de Ensino\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/maps\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"map\" className=\"mr-3\"/>\n                        Maps\n                    </MDBListGroupItem>\n                </NavLink>\n                <NavLink to=\"/404\" activeClassName=\"activeClass\">\n                    <MDBListGroupItem>\n                        <MDBIcon icon=\"exclamation\" className=\"mr-3\"/>\n                        404\n                    </MDBListGroupItem>\n                </NavLink>\n            </MDBListGroup>\n        </div>\n    );\n}\n\nexport default TopNavigation;","import React from 'react';\nimport { MDBFooter, MDBBtn, MDBIcon } from 'mdbreact';\n\nconst Footer = () => {\n    return (\n        <MDBFooter color=\"blue\" className=\"text-center font-small darken-2\">\n            {/* <div className=\"pt-4\">\n                <MDBBtn outline color=\"white\" tag=\"a\" href=\"https://mdbootstrap.com/docs/react/getting-started/download/\" target=\"_blank\">Download MDB<MDBIcon icon=\"download\" className=\"ml-2\"/></MDBBtn>\n                <MDBBtn outline color=\"white\" tag=\"a\" href=\"https://mdbootstrap.com/docs/react/getting-started/quick-start/\" target=\"_blank\">Start free tutorial<MDBIcon icon=\"graduation-cap\" className=\"ml-2\"/></MDBBtn>\n                <hr className=\"my4\"/>\n            </div>\n            <p className=\"footer-copyright mb-0 py-3 text-center\">\n                &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a>\n            </p> */}\n        </MDBFooter>\n    );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Routes from '../src/components/Routes';\nimport TopNavigation from './components/topNavigation';\nimport SideNavigation from './components/sideNavigation';\nimport Footer from './components/Footer';\nimport './index.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n        <div className=\"flexible-content\">\n          <TopNavigation />\n          <SideNavigation />\n          <main id=\"content\" className=\"p-5\">\n            <Routes />\n          </main>\n          <Footer />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}